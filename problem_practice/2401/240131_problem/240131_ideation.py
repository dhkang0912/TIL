# [S/W 문제해결 기본] 2일차 - Sum
# 1. 테스트 케이스는 10개가 주어진다.
# 2. 테스트 케이스를 순회한다.
# 3. 100*100의 2차원 배열이 주어진다. -> 나열된 숫자들을 2차원 배열로 만든다.
    # 3-1) 어떻게 2차원 배열을 만들었지?
        # n = 100 -> 100*100의 배열이기 때문에 한 행의 갯수가 n, 한 열의 갯수도 n
        # arr = [list(map(int, input())) for _ in range(n)]


    # 3-2) 각 행의 합을 구한다
        # for row in range(n) :
            # 1번 순회할 때마다 100열까지 더함
            # -> arr[0,0] + arr[0,1] +arr[0,2] ....+ arr[0,99]
            # -> arr[row]
            # 이걸 100번 순회함
            # 첫번째 순회했으면 두번째 번도 순회해야함 -> 이중 for 문
            # 그리고 각 열을 더해야함

    # 3-3) 각 열의 합을 구한다
        # for col in range(n) :
            # 1번 순회할 때마다 100행까지 더함
            # -> arr[0,0] + arr[1,0] +arr[2,0] ....+ arr[99,0]
            # -> arr[col]
            # 이걸 100번 순회함
            # 첫번째 순회했으면 두번째 번도 순회해야함 -> 이중 for 문
            # 그리고 각 행을 더해야함

    # 3-4) 오른쪽 아래 대각선의 합을 구한다.
        # 각 대각선 arr[0,0] arr[1,1] arr[2,2] ....arr[99,99]
        #  -> arr[i][i]

    # 3-5) 왼쪽 아래 대각선의 합을 구한다.
        # arr[0, -1] arr[1, -2]arr[2, -3] ... arr[99, -100]
        # -> arr[i, (-i) -1]

# 4. 위 각 합들을 비교하여 가장 큰 수를 구한다.